name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '11'
  JAVA_DISTRO: 'temurin'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: 'Set up Java'
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: 'Cache Maven packages'
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.4.2

      # Makes sure the example project is built against the SDK build from this CI run
      - name: Update version for example
        id: version
        run: |
          RELEASE_VERSION="1.0.0.ci"

          echo "version=$RELEASE_VERSION" > sdk/gradle.properties
          sed -i 's/<decodable.pipeline.sdk.version>.*<\/decodable.pipeline.sdk.version>/<decodable.pipeline.sdk.version>'"$RELEASE_VERSION"'<\/decodable.pipeline.sdk.version>/g' examples/custom-pipelines-hello-world/pom.xml
          sed -i 's/sdkVersion = \x27.*\x27/sdkVersion = \x27'"$RELEASE_VERSION"'\x27/g' examples/custom-pipelines-hello-world/build.gradle

      - name: Build SDK
        run: cd sdk && ./gradlew build publishToMavenLocal

      - name: Build example project with Maven
        run: cd examples/custom-pipelines-hello-world && ./mvnw -B clean verify

      - name: Build example project with Gradle
        run: cd examples/custom-pipelines-hello-world && ./gradlew clean build
