---
kind: secret
metadata:
  name: api-key-secret
  description: API Key for purchase orders REST source
  tags:
    team: eng
    example: sdk-pipelines  
spec_version: v1
spec:
  value_literal: "my very secret API key"
---
kind: connection
metadata:
  name: purchase-orders-source
  description: A REST source for purchase orders
  tags:
    team: eng
    example: sdk-pipelines  
spec_version: v2
spec:
  connector: rest
  type: source
  properties:
    format: json
    parse-error-policy: FAIL
    api-key: api-key-secret
  stream_name: purchase-orders
  schema_v2:
    fields:
      - kind: physical
        name: order_id
        type: bigint
      - kind: physical
        name: order_date
        type: string
      - kind: physical
        name: customer_name
        type: string
      - kind: physical
        name: price
        type: double
      - kind: physical
        name: product_id
        type: bigint
      - kind: physical
        name: order_status
        type: boolean
  execution:
    active: true
    task_count: 1
    task_size: S
---
kind: stream
metadata:
  name: purchase-orders
  description: Purchase order data
  tags:
    team: eng
    example: sdk-pipelines  
spec_version: v1
spec:
  schema_v2:
    fields:
      - kind: physical
        name: order_id
        type: bigint
      - kind: physical
        name: order_date
        type: string
      - kind: physical
        name: customer_name
        type: string
      - kind: physical
        name: price
        type: double
      - kind: physical
        name: product_id
        type: bigint
      - kind: physical
        name: order_status
        type: boolean
---
kind: stream
metadata:
  name: purchase-orders-processed
  description: Processed purchase order data
  tags:
    team: eng
    example: sdk-pipelines  
spec_version: v1
spec:
  schema_v2:
    fields:
      - kind: physical
        name: order_id
        type: bigint
      - kind: physical
        name: order_date
        type: string
      - kind: physical
        name: customer_name
        type: string
      - kind: physical
        name: price
        type: double
      - kind: physical
        name: product_id
        type: bigint
      - kind: physical
        name: order_status
        type: boolean
---
# Custom pipeline running the DataStreamJob
kind: pipeline
metadata:
  name: customer-processor
  tags:
    team: eng
    example: sdk-pipelines  
spec_version: v2
spec:
    type: JAVA
    
    # When building with Maven
    # job_file_path: target/custom-pipelines-hello-world-0.3.jar
    # When building with Gradle
    job_file_path: build/libs/custom-pipelines-hello-world-0.3-all.jar
    
    # Select which job to run from the JAR file
    # NOTE: when running the keyed append stream or change stream based variants of the example jobs,
    # you'd need to redefine both purchase order stream resource definitions above to reflect this. Also, you'd
    # need to either feed the source stream from a CDC source or use another pipeline for pre-processing
    # since the REST resource used in the example currently only supports ingestion into unkeyed append streams.
    entry_class: co.decodable.examples.cpdemo.KeylessAppendStreamJob

    properties:
        flink_version: 1.19-java11
    execution:
      active: true
      task_count: 1
      task_size: M
